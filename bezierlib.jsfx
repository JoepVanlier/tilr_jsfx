desc:bezierlib

@init

function fact(n) (
  n == 0 ? 1 :
  n == 1 ? 1 :
  n == 2 ? 2 :
  n == 3 ? 6 :
  n == 4 ? 24 :
  n == 5 ? 120 :
  n == 6 ? 720 :
  0;
);

function bezier_eq(n, tab_xy, dt)
local (b, i)
(
  b = 0;
  loop(i=0; n,
    b = b + ( fact(n) / (fact(i) * fact(n - i)))
    * (1 - dt)^(n - i)
    * dt ^ i
    * tab_xy[i];
    i += 1;
  );
  b;
);


@gfx 500 300

/*
  n   order
  x   x coordinates array
  y   y coordinates array
*/
function draw_curve(n, x, y)
local(i)
(
  gfx_x = x[0];
  gfx_y = y[0];
  
  loop(i=0; 100,
    x_point = bezier_eq(n, x, i) + i^n*x[n-1];
    y_point = bezier_eq(n, y, i) + i^n*y[n-1];
    gfx_x = x_point;
    gfx_y = y_point;
    gfx_setpixel(1, 0, 0);
    i += 0.01;
  );
);

x = 0;
x[0] = 0;
x[1] = 50;
x[2] = 300;
x[3] = 400;

y = 4;
y[0] = 20;
y[1] = 20;
y[2] = 20;
y[3] = 100;

gfx_set(1, 0, 0);
draw_curve(4, x, y);
