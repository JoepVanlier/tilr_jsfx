desc: Keyboard split 4
//tags: MIDI processing

slider1:0<0,17,1{disabled,same,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Zone1
slider2:0<0,127,1>Note Min
slider3:127<0,127,1>Note Max
slider4:0<0,127,1>Vel Min
slider5:127<0,127,1>Vel max
slider6:0<-60,60,1>Transpose (semitones)

slider9:0<0,17,1{disabled,same,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Zone2
slider10:0<0,127,1>Note Min
slider11:127<0,127,1>Note Max
slider12:0<0,127,1>Vel Min
slider13:127<0,127,1>Vel max
slider14:0<-60,60,1>Transpose (semitones)

slider17:0<0,17,1{disabled,same,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Zone3
slider18:0<0,127,1>Note Min
slider19:127<0,127,1>Note Max
slider20:0<0,127,1>Vel Min
slider21:127<0,127,1>Vel max
slider22:0<-60,60,1>Transpose (semitones)

slider25:0<0,17,1{disabled,same,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Zone4
slider26:0<0,127,1>Note Min
slider27:127<0,127,1>Note Max
slider28:0<0,127,1>Vel Min
slider29:127<0,127,1>Vel max
slider30:0<-60,60,1>Transpose (semitones)

in_pin:none
out_pin:none

@init
NOTE_ON = $x90;
NOTE_OFF = $x80;

sliders = 0

@slider

// Clamp to respectable values
slider2 = min(slider2, slider3);
slider3 = max(slider2, slider3);
slider4 = min(slider4, slider5);
slider5 = max(slider4, slider5);

slider10 = min(slider10, slider11);
slider11 = max(slider10, slider11);
slider12 = min(slider12, slider13);
slider13 = max(slider12, slider13);

slider18 = min(slider18, slider19);
slider19 = max(slider18, slider19);
slider20 = min(slider20, slider21);
slider21 = max(slider20, slider21);

slider26 = min(slider26, slider27);
slider27 = max(slider26, slider27);
slider28 = min(slider28, slider29);
slider29 = max(slider28, slider29);

sliders[1] = slider1;
sliders[2] = slider2;
sliders[3] = slider3;
sliders[4] = slider4;
sliders[5] = slider5;
sliders[6] = slider6;

sliders[9] = slider9;
sliders[10] = slider10;
sliders[11] = slider11;
sliders[12] = slider12;
sliders[13] = slider13;
sliders[14] = slider14;

sliders[17] = slider17;
sliders[18] = slider18;
sliders[19] = slider19;
sliders[20] = slider20;
sliders[21] = slider21;
sliders[22] = slider22;

sliders[25] = slider25;
sliders[26] = slider26;
sliders[27] = slider27;
sliders[28] = slider28;
sliders[29] = slider29;
sliders[30] = slider30;

@block
while (
  midirecv(offset, msg1, msg23) ? (
    status = msg1 & $xF0;
    channel = msg1 & $x0F;
    isnote = status == NOTE_ON || status == NOTE_OFF;

    isnote ? (
      i = 0;
      while (
        note = msg23 & $x7F;

        sliders[1 + i*8] > 0 && note >= sliders[2 + i*8] && note <= sliders[3 + i*8] ? (
          vel = msg23 >> 8;
          vel == 0 || (vel >= sliders[4 + i*8] && vel <= sliders[5 + i*8]) ? (
            note += sliders[6 + i*8]; // transpose
            note = min(max(note, 0), 127);
            outchannel = sliders[1 + i*8] == 1 ? channel : sliders[1 + i*8] - 1;
            msga = status + outchannel;
            msgb = note | (vel << 8);
            midisend(offset, msga, msgb);
          );
        );
        (i += 1) < 4;
      );
    ) : (
      midisend(offset, msg1, msg23); // midi thru
    );
  );
);
